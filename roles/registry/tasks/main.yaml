- name: Debug users
  debug:
    msg: "{{ registry }}"

- name: Debug users
  debug:
    msg: "{{ tati }}"

- name: "Update/Install package"
  package:
    name:
      - podman
      - skopeo
      - httpd-tools
    state: present

- name: Create registry directories
  file:
    path: /opt/registry/{{ item }}
    state: directory
    # mode: "0644"
  with_items:
    - auth
    - certs
    - data

- name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
  openssl_privatekey:
    path: /opt/registry/certs/domain.pem

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: /opt/registry/certs/domain.csr
    privatekey_path: /opt/registry/certs/domain.pem
    basic_constraints:
      - CA:TRUE
    basic_constraints_critical: yes # noqa yaml
    common_name: "{{ hostname }}"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: /opt/registry/certs/domain.crt
    privatekey_path: /opt/registry/certs/domain.pem
    csr_path: /opt/registry/certs/domain.csr
    provider: selfsigned

- name: Remove /opt/registry/auth/htpasswd if it exists
  file:
    state: absent
    path: /opt/registry/auth/htpasswd

- name: Remove /opt/registry/auth/htpasswd
  file:
    state: touch
    path: /opt/registry/auth/htpasswd

- name: Create users for local registry
  command: "htpasswd -bB /opt/registry/auth/htpasswd {{ item.user }} {{ item.password }}"
  with_items: "{{ users }}"
  failed_when: (create_user.rc > 0)
  register: create_user
  changed_when: create_user.rc == 0

- name: Copy Self Signed OpenSSL certificate
  copy:
    src: /opt/registry/certs/domain.crt
    dest: /etc/pki/ca-trust/source/anchors/domain.crt
    remote_src: yes # noqa yaml
    force: yes # noqa yaml
    mode: 0644

- name: Add the Self Signed OpenSSL certificate to your list of trusted certificates
  shell: |
    set -o pipefail
    update-ca-trust || true
    cat /etc/pki/tls/certs/ca-bundle.trust.crt | grep {{ hostname }} | wc -l
  register: cert_trust
  until: cert_trust.stdout|int == 1
  retries: 3
  delay: 10
  changed_when: cert_trust.rc == 0

- name: Generate local-registry service file
  template:
    src: local-registry.service.j2
    dest: /etc/systemd/system/local-registry.service
    # mode: 0655

- name: Log to Docker.io
  command: "podman login docker.io -u {{ docker_io.user }} -p {{ docker_io.token }}"
  when: (docker_io.user is defined and docker_io.token is defined) and (docker_io.user|length>0 and docker_io.token|length>0)

- name: Start local-registry
  systemd:
    name: local-registry
    state: started
    enabled: yes # noqa yaml
    daemon_reload: yes # noqa yaml

- name: Ensure registry pod is up
  shell: set -o pipefail && podman ps | grep local-registry
  register: pod_state
  until: pod_state.stdout != ""
  retries: 4
  delay: 15
  changed_when: pod_state.rc == 0


- name: Allow traffic at local registry port
  firewalld:
    port: 5000/tcp
    permanent: yes # noqa yaml
    zone: "{{ item }}"
    state: enabled
  with_items:
    - internal
    - public

- name: Restarting regitry services
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - firewalld
    - local-registry

- name: Get local registry pod
  shell: set -o pipefail && curl -u {{ users[0].user }}:{{ users[0].password }} -k https://{{ hostname }}:{{ registry.port }}/v2/_catalog | grep repositories # noqa yaml
  register: pod_state
  until: pod_state.stdout != ""
  retries: 3
  delay: 30
  changed_when: pod_state.rc == 0
